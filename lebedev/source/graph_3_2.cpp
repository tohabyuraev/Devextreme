#include "../core/interp.hpp"
#include "graph_3_2.hpp"


float graph_3_2(
    const float argument_0,
    const float argument_1)
{
    // Пример перевода в массивы
    // vector_t data_x_1 = {-0.80000, -0.60000, -0.40000, -0.20000, 0.00000, 0.20000, 0.40000, 0.60000, 0.80000, 1.00000, 1.20000, 1.40000, 1.60000, 1.80000, 2.00000, 2.20000, 2.40000, 2.60000};
    // vector_t data_y_1 = {0.03526, 0.03526, 0.03520, 0.03473, 0.03415, 0.03378, 0.03356, 0.03301, 0.03270, 0.03251, 0.03244, 0.03241, 0.03243, 0.03238, 0.03238, 0.03233, 0.03229, 0.03230};

    // vector_t data_x_2 = {-0.80000, -0.60000, -0.40000, -0.20000, 0.00000, 0.20000, 0.40000, 0.60000, 0.80000, 1.00000, 1.20000, 1.40000, 1.60000, 1.80000, 2.00000, 2.20000, 2.40000, 2.60000};
    // vector_t data_y_2 = {0.03526, 0.03526, 0.03538, 0.03593, 0.03837, 0.04247, 0.04557, 0.04666, 0.04620, 0.04507, 0.04380, 0.04284, 0.04190, 0.04109, 0.04046, 0.04008, 0.03979, 0.03952};
    
    // vector_t data_x_3 = {-0.80000, -0.60000, -0.40000, -0.20000, 0.00000, 0.20000, 0.40000, 0.60000, 0.80000, 1.00000, 1.20000, 1.40000, 1.60000, 1.80000, 2.00000, 2.20000, 2.40000, 2.60000};
    // vector_t data_y_3 = {0.03526, 0.03526, 0.03538, 0.03593, 0.03837, 0.04314, 0.04790, 0.05067, 0.05156, 0.05097, 0.05014, 0.04918, 0.04830, 0.04745, 0.04674, 0.04605, 0.04549, 0.04517};
    
    // vector_t data_x_4 = {-0.80000, -0.60000, -0.40000, -0.20000, 0.00000, 0.20000, 0.40000, 0.60000, 0.80000, 1.00000, 1.20000, 1.40000, 1.60000, 1.80000, 2.00000, 2.20000, 2.40000, 2.60000};
    // vector_t data_y_4 = {0.03526, 0.03526, 0.03538, 0.03593, 0.03837, 0.04314, 0.04813, 0.05190, 0.05456, 0.05599, 0.05658, 0.05642, 0.05591, 0.05523, 0.05463, 0.05409, 0.05338, 0.05267};
    
    // vector_t data_x_5 = {-0.80000, -0.60000, -0.40000, -0.20000, 0.00000, 0.20000, 0.40000, 0.60000, 0.80000, 1.00000, 1.20000, 1.40000, 1.60000, 1.80000, 2.00000, 2.20000, 2.40000, 2.60000};
    // vector_t data_y_5 = {0.03526, 0.03526, 0.03538, 0.03593, 0.03837, 0.04314, 0.04813, 0.05199, 0.05504, 0.05720, 0.05817, 0.05883, 0.05901, 0.05893, 0.05868, 0.05837, 0.05803, 0.05751};
    
    // vector_t data_x_6 = {-0.80000, -0.60000, -0.40000, -0.20000, 0.00000, 0.20000, 0.40000, 0.60000, 0.80000, 1.00000, 1.20000, 1.40000, 1.60000, 1.80000, 2.00000, 2.20000, 2.40000, 2.60000};
    // vector_t data_y_6 = {0.03526, 0.03526, 0.03538, 0.03593, 0.03837, 0.04314, 0.04813, 0.05199, 0.05504, 0.05733, 0.05877, 0.05978, 0.06026, 0.06000, 0.06000, 0.06000, 0.06000, 0.06000};
    
    map_t data_1 = {{-0.80000f, 0.03526f}, {-0.60000f, 0.03526f}, {-0.40000f, 0.03520f}, {-0.20000f, 0.03473f}, {0.00000f, 0.03415f}, {0.20000f, 0.03378f}, {0.40000f, 0.03356f}, {0.60000f, 0.03301f}, {0.80000f, 0.03270f}, {1.00000f, 0.03251f}, {1.20000f, 0.03244f}, {1.40000f, 0.03241f}, {1.60000f, 0.03243f}, {1.80000f, 0.03238f}, {2.00000f, 0.03238f}, {2.20000f, 0.03233f}, {2.40000f, 0.03229f}, {2.60000f, 0.03230f}};
    map_t data_2 = {{-0.80000f, 0.03526f}, {-0.60000f, 0.03526f}, {-0.40000f, 0.03538f}, {-0.20000f, 0.03593f}, {0.00000f, 0.03837f}, {0.20000f, 0.04247f}, {0.40000f, 0.04557f}, {0.60000f, 0.04666f}, {0.80000f, 0.04620f}, {1.00000f, 0.04507f}, {1.20000f, 0.04380f}, {1.40000f, 0.04284f}, {1.60000f, 0.04190f}, {1.80000f, 0.04109f}, {2.00000f, 0.04046f}, {2.20000f, 0.04008f}, {2.40000f, 0.03979f}, {2.60000f, 0.03952f}};
    map_t data_3 = {{-0.80000f, 0.03526f}, {-0.60000f, 0.03526f}, {-0.40000f, 0.03538f}, {-0.20000f, 0.03593f}, {0.00000f, 0.03837f}, {0.20000f, 0.04314f}, {0.40000f, 0.04790f}, {0.60000f, 0.05067f}, {0.80000f, 0.05156f}, {1.00000f, 0.05097f}, {1.20000f, 0.05014f}, {1.40000f, 0.04918f}, {1.60000f, 0.04830f}, {1.80000f, 0.04745f}, {2.00000f, 0.04674f}, {2.20000f, 0.04605f}, {2.40000f, 0.04549f}, {2.60000f, 0.04517f}};
    map_t data_4 = {{-0.80000f, 0.03526f}, {-0.60000f, 0.03526f}, {-0.40000f, 0.03538f}, {-0.20000f, 0.03593f}, {0.00000f, 0.03837f}, {0.20000f, 0.04314f}, {0.40000f, 0.04813f}, {0.60000f, 0.05190f}, {0.80000f, 0.05456f}, {1.00000f, 0.05599f}, {1.20000f, 0.05658f}, {1.40000f, 0.05642f}, {1.60000f, 0.05591f}, {1.80000f, 0.05523f}, {2.00000f, 0.05463f}, {2.20000f, 0.05409f}, {2.40000f, 0.05338f}, {2.60000f, 0.05267f}};
    map_t data_5 = {{-0.80000f, 0.03526f}, {-0.60000f, 0.03526f}, {-0.40000f, 0.03538f}, {-0.20000f, 0.03593f}, {0.00000f, 0.03837f}, {0.20000f, 0.04314f}, {0.40000f, 0.04813f}, {0.60000f, 0.05199f}, {0.80000f, 0.05504f}, {1.00000f, 0.05720f}, {1.20000f, 0.05817f}, {1.40000f, 0.05883f}, {1.60000f, 0.05901f}, {1.80000f, 0.05893f}, {2.00000f, 0.05868f}, {2.20000f, 0.05837f}, {2.40000f, 0.05803f}, {2.60000f, 0.05751f}};
    map_t data_6 = {{-0.80000f, 0.03526f}, {-0.60000f, 0.03526f}, {-0.40000f, 0.03538f}, {-0.20000f, 0.03593f}, {0.00000f, 0.03837f}, {0.20000f, 0.04314f}, {0.40000f, 0.04813f}, {0.60000f, 0.05199f}, {0.80000f, 0.05504f}, {1.00000f, 0.05733f}, {1.20000f, 0.05877f}, {1.40000f, 0.05978f}, {1.60000f, 0.06026f}, {1.80000f, 0.06000f}, {2.00000f, 0.06000f}, {2.20000f, 0.06000f}, {2.40000f, 0.06000f}, {2.60000f, 0.06000f}};

    if (argument_1 < 0.0) {
        return interp1d(argument_0, data_1);
    }
    else if (argument_1 <= 0.5) {
        map_t points = {
            {0.0, interp1d(argument_0, data_1)},
            {0.5, interp1d(argument_0, data_2)},
        };
        return interp1d(argument_0, points);
    }
    else if (argument_1 <= 1.0) {
        map_t points = {
            {0.5, interp1d(argument_0, data_2)},
            {1.0, interp1d(argument_0, data_3)},
        };
        return interp1d(argument_0, points);
    }
    else if (argument_1 <= 2.0) {
        map_t points = {
            {1.0, interp1d(argument_0, data_3)},
            {2.0, interp1d(argument_0, data_4)},
        };
        return interp1d(argument_0, points);
    }
    else if (argument_1 <= 3.0) {
        map_t points = {
            {2.0, interp1d(argument_0, data_4)},
            {3.0, interp1d(argument_0, data_5)},
        };
        return interp1d(argument_0, points);
    }
    else if (argument_1 <= 4.0) {
        map_t points = {
            {3.0, interp1d(argument_0, data_5)},
            {4.0, interp1d(argument_0, data_6)},
        };
        return interp1d(argument_0, points);
    }
    else {
        return interp1d(argument_0, data_6);
    };
}