#include "../core/interp.hpp"
#include "graph.hpp"


float graph_4_35(
    const float M_kr,
    const float lambda_k)
{
    map_t data_1 = {{0.70000, 0.74182}, {0.73153, 0.71007}, {0.79680, 0.63225}, {0.84840, 0.54858}, {0.87500, 0.49526}, {0.89928, 0.43588}, {0.93341, 0.32934}, {0.95254, 0.25538}, {0.96604, 0.19333}, {0.97512, 0.14816}, {0.98373, 0.09947}, {0.99293, 0.04411}, {1.00000, 0.00000}};
    map_t data_2 = {{0.70000, 0.31507}, {0.73082, 0.31050}, {0.75855, 0.30502}, {0.79741, 0.29100}, {0.84695, 0.26113}, {0.89232, 0.22090}, {0.93366, 0.16666}, {0.95998, 0.11667}, {0.97484, 0.08226}, {0.98446, 0.05700}, {0.98967, 0.03895}, {1.00000, 0.00000}};
    map_t data_3 = {{0.70000, 0.08044}, {0.74953, 0.08044}, {0.89960, 0.07090}, {0.94156, 0.05749}, {0.96128, 0.04585}, {0.98373, 0.02675}, {1.00000, 0.00000}};

    if (lambda_k < 0.5) {
        return interp1d(M_kr, data_1);
    }
    else if (lambda_k < 1.0) {
        map_t points = {
            {0.5, interp1d(M_kr, data_1)},
            {1.0, interp1d(M_kr, data_2)},
        };
        return interp1d(lambda_k, points);
    }
    else if (lambda_k < 2.0) {
        map_t points = {
            {1.0, interp1d(M_kr, data_2)},
            {2.0, interp1d(M_kr, data_3)},
        };
        return interp1d(lambda_k, points);
    }
    else {
        return interp1d(M_kr, data_3);
    };
}